# volumes:
#   pg_data:

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - api-books
    ports:
      - "80:80"
    volumes:
      - ./dev/proxy/nginx.conf:/etc/nginx/conf.d/default.conf

  api-books:
    build:
      dockerfile: Dockerfile.dev
      context: ./
    volumes:
      - ./:/app
    ports:
      - "3010:3005" #http port
      # - "3001:3001" #grpc port
    depends_on:
      - db
      - cache
      - otel-collector
      - jaeger

  db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.128.0
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - 4317:4317

  prometheus:
    image: prom/prometheus:v3.4.2
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  jaeger:
    image: jaegertracing/all-in-one:1.60
    ports:
      - 16686:16686

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./pkg/observability/grafana/provisioning:/etc/grafana/provisioning
      - ./pkg/observability/grafana/dashboards:/etc/grafana/dashboards
    depends_on:
      - prometheus
  cache:
    image: redis:latest
    expose:
      - 6379
    # ports:
    #     - "6379:6379"
